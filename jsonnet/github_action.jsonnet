local onMaster = { 'if': "${{ github.ref == 'refs/heads/master' && github.repository == 'jsonnet-libs/k8s' }}" };
local onPR = { 'if': "${{ github.event_name == 'pull_request' && github.repository == 'jsonnet-libs/k8s' }}" };

function(libs) {
  '.github/workflows/main.yml':
    '# Generated by `make configure`, please do not edit manually.\n' + std.manifestYamlDoc({
      on: [
        'push',
      ],
      jobs: {
        [lib.name]: {
          name: 'Generate ' + lib.name + ' Jsonnet library and docs',
          needs: 'terraform',
          'runs-on': 'ubuntu-latest',
          steps: [
            { uses: 'actions/checkout@v2' },
            onMaster {
              run: |||
                mkdir ~/.ssh
                echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                export GEN_COMMIT=1
              |||,
            },
            { run: 'make build libs/' + lib.name },
          ],
        }
        for lib in libs
      } + {
        terraform: {
          name: 'create repositories',
          'runs-on': 'ubuntu-latest',
          steps: [
            { uses: 'actions/checkout@v2' },
            { uses: 'hashicorp/setup-terraform@v1' },
            { uses: 'zendesk/setup-jsonnet@v1' },
            { run: 'make tf/main.tf.json' },
            onMaster {
              // TODO: store state somewhere sane
              run: 'terraform apply -no-color',
              'working-directory': 'tf',
              env: {
                GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}',
              },
            },
            onPR {
              run: 'terraform init && terraform plan -no-color',
              'working-directory': 'tf',
              env: {
                GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}',
              },
            },
          ],
        },
      },
    }),
}
